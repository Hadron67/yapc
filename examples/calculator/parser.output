i0
[ 0: (accept) -> . start, { <EOF>, } ]* (s1)
[ 1: start -> . expr, { <EOF>, } ] (s2)
[ 2: expr -> . expr <+> multiplyExpr, { <EOF>,<+>,<->, } ] (s2)
[ 3: expr -> . expr <-> multiplyExpr, { <EOF>,<+>,<->, } ] (s2)
[ 4: expr -> . multiplyExpr, { <EOF>,<+>,<->, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <EOF>,<+>,<->,<*>,</>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <EOF>,<+>,<->,<*>,</>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <EOF>,<+>,<->,<*>,</>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s3)
[ 10: atomicExpr -> . atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s76)
[ 14: atom -> . <num>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s9)
[ 16: atom -> . functions, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s12)
[ 17: atom -> . consts, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s68)
[ 30: consts -> . <I>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s77)
[ 31: consts -> . <pi>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s78)
[ 32: consts -> . <e>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s79)

i1
[ 0: (accept) -> start ., { <EOF>, } ]* (r)

i2
[ 1: start -> expr ., { <EOF>, } ]* (r)
[ 2: expr -> expr . <+> multiplyExpr, { <EOF>,<+>,<->, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <EOF>,<+>,<->, } ]* (s73)

i3
[ 9: powerExpr -> atomicExpr ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i4
[ 10: atomicExpr -> atom ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i5
[ 11: atomicExpr -> <+> atom ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i6
[ 12: atomicExpr -> <-> atom ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i7
[ 13: atomicExpr -> <*> atom ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i8
[ 14: atom -> <num> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i9
[ 15: atom -> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s10)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s10)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s10)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i10
[ 15: atom -> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s11)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i11
[ 15: atom -> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i12
[ 16: atom -> functions ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i13
[ 17: atom -> consts ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i14
[ 18: functions -> <sin> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s15)

i15
[ 18: functions -> <sin> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s16)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s16)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s16)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i16
[ 18: functions -> <sin> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s17)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i17
[ 18: functions -> <sin> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i18
[ 5: multiplyExpr -> multiplyExpr <*> powerExpr ., { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (r)
[ 8: powerExpr -> powerExpr . <**> atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s29)

i19
[ 8: powerExpr -> powerExpr <**> atomicExpr ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i20
[ 5: multiplyExpr -> multiplyExpr <*> . powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (s18)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s18)
[ 9: powerExpr -> . atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s76)
[ 14: atom -> . <num>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s9)
[ 16: atom -> . functions, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s12)
[ 17: atom -> . consts, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s68)
[ 30: consts -> . <I>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s77)
[ 31: consts -> . <pi>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s78)
[ 32: consts -> . <e>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s79)

i21
[ 7: multiplyExpr -> powerExpr ., { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (r)
[ 8: powerExpr -> powerExpr . <**> atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s29)

i22
[ 19: functions -> <cos> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s23)

i23
[ 19: functions -> <cos> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s24)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s24)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s24)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i24
[ 19: functions -> <cos> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s25)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i25
[ 19: functions -> <cos> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i26
[ 2: expr -> expr <+> multiplyExpr ., { <EOF>,<+>,<->,<)>, } ]* (r)
[ 5: multiplyExpr -> multiplyExpr . <*> powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (s20)
[ 6: multiplyExpr -> multiplyExpr . </> powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (s31)

i27
[ 3: expr -> expr <-> multiplyExpr ., { <EOF>,<+>,<->,<)>, } ]* (r)
[ 5: multiplyExpr -> multiplyExpr . <*> powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (s20)
[ 6: multiplyExpr -> multiplyExpr . </> powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (s31)

i28
[ 6: multiplyExpr -> multiplyExpr </> powerExpr ., { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (r)
[ 8: powerExpr -> powerExpr . <**> atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s29)

i29
[ 8: powerExpr -> powerExpr <**> . atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s19)
[ 10: atomicExpr -> . atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s76)
[ 14: atom -> . <num>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s9)
[ 16: atom -> . functions, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s12)
[ 17: atom -> . consts, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s68)
[ 30: consts -> . <I>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s77)
[ 31: consts -> . <pi>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s78)
[ 32: consts -> . <e>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s79)

i30
[ 4: expr -> multiplyExpr ., { <EOF>,<+>,<->,<)>, } ]* (r)
[ 5: multiplyExpr -> multiplyExpr . <*> powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (s20)
[ 6: multiplyExpr -> multiplyExpr . </> powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (s31)

i31
[ 6: multiplyExpr -> multiplyExpr </> . powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ]* (s28)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s28)
[ 9: powerExpr -> . atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s76)
[ 14: atom -> . <num>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s9)
[ 16: atom -> . functions, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s12)
[ 17: atom -> . consts, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s68)
[ 30: consts -> . <I>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s77)
[ 31: consts -> . <pi>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s78)
[ 32: consts -> . <e>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s79)

i32
[ 20: functions -> <tan> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s33)

i33
[ 20: functions -> <tan> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s34)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s34)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s34)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i34
[ 20: functions -> <tan> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s35)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i35
[ 20: functions -> <tan> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i36
[ 21: functions -> <asin> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s37)

i37
[ 21: functions -> <asin> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s38)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s38)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s38)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i38
[ 21: functions -> <asin> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s39)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i39
[ 21: functions -> <asin> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i40
[ 22: functions -> <acos> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s41)

i41
[ 22: functions -> <acos> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s42)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s42)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s42)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i42
[ 22: functions -> <acos> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s43)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i43
[ 22: functions -> <acos> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i44
[ 23: functions -> <atan> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s45)

i45
[ 23: functions -> <atan> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s46)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s46)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s46)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i46
[ 23: functions -> <atan> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s47)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i47
[ 23: functions -> <atan> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i48
[ 24: functions -> <sinh> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s49)

i49
[ 24: functions -> <sinh> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s50)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s50)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s50)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i50
[ 24: functions -> <sinh> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s51)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i51
[ 24: functions -> <sinh> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i52
[ 25: functions -> <cosh> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s53)

i53
[ 25: functions -> <cosh> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s54)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s54)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s54)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i54
[ 25: functions -> <cosh> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s55)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i55
[ 25: functions -> <cosh> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i56
[ 26: functions -> <tanh> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s57)

i57
[ 26: functions -> <tanh> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s58)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s58)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s58)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i58
[ 26: functions -> <tanh> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s59)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i59
[ 26: functions -> <tanh> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i60
[ 27: functions -> <exp> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s61)

i61
[ 27: functions -> <exp> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s62)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s62)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s62)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i62
[ 27: functions -> <exp> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s63)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i63
[ 27: functions -> <exp> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i64
[ 28: functions -> <ln> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s65)

i65
[ 28: functions -> <ln> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s66)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s66)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s66)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i66
[ 28: functions -> <ln> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s67)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i67
[ 28: functions -> <ln> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i68
[ 29: functions -> <sqrt> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s69)

i69
[ 29: functions -> <sqrt> <(> . expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s70)
[ 2: expr -> . expr <+> multiplyExpr, { <+>,<->,<)>, } ] (s70)
[ 3: expr -> . expr <-> multiplyExpr, { <+>,<->,<)>, } ] (s70)
[ 4: expr -> . multiplyExpr, { <+>,<->,<)>, } ] (s30)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s30)
[ 7: multiplyExpr -> . powerExpr, { <+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s68)
[ 30: consts -> . <I>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s77)
[ 31: consts -> . <pi>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s78)
[ 32: consts -> . <e>, { <+>,<->,<*>,</>,<**>,<)>, } ] (s79)

i70
[ 29: functions -> <sqrt> <(> expr . <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s71)
[ 2: expr -> expr . <+> multiplyExpr, { <+>,<->,<)>, } ]* (s72)
[ 3: expr -> expr . <-> multiplyExpr, { <+>,<->,<)>, } ]* (s73)

i71
[ 29: functions -> <sqrt> <(> expr <)> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i72
[ 2: expr -> expr <+> . multiplyExpr, { <EOF>,<+>,<->,<)>, } ]* (s26)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ] (s26)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ] (s26)
[ 7: multiplyExpr -> . powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s68)
[ 30: consts -> . <I>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s77)
[ 31: consts -> . <pi>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s78)
[ 32: consts -> . <e>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s79)

i73
[ 3: expr -> expr <-> . multiplyExpr, { <EOF>,<+>,<->,<)>, } ]* (s27)
[ 5: multiplyExpr -> . multiplyExpr <*> powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ] (s27)
[ 6: multiplyExpr -> . multiplyExpr </> powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ] (s27)
[ 7: multiplyExpr -> . powerExpr, { <EOF>,<+>,<->,<*>,</>,<)>, } ] (s21)
[ 8: powerExpr -> . powerExpr <**> atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s21)
[ 9: powerExpr -> . atomicExpr, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s3)
[ 10: atomicExpr -> . atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s4)
[ 11: atomicExpr -> . <+> atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s74)
[ 12: atomicExpr -> . <-> atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s75)
[ 13: atomicExpr -> . <*> atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s76)
[ 14: atom -> . <num>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s68)
[ 30: consts -> . <I>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s77)
[ 31: consts -> . <pi>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s78)
[ 32: consts -> . <e>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s79)

i74
[ 11: atomicExpr -> <+> . atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s5)
[ 14: atom -> . <num>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s68)
[ 30: consts -> . <I>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s77)
[ 31: consts -> . <pi>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s78)
[ 32: consts -> . <e>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s79)

i75
[ 12: atomicExpr -> <-> . atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s6)
[ 14: atom -> . <num>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s68)
[ 30: consts -> . <I>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s77)
[ 31: consts -> . <pi>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s78)
[ 32: consts -> . <e>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s79)

i76
[ 13: atomicExpr -> <*> . atom, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (s7)
[ 14: atom -> . <num>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s8)
[ 15: atom -> . <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s9)
[ 16: atom -> . functions, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s12)
[ 17: atom -> . consts, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s13)
[ 18: functions -> . <sin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s14)
[ 19: functions -> . <cos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s22)
[ 20: functions -> . <tan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s32)
[ 21: functions -> . <asin> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s36)
[ 22: functions -> . <acos> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s40)
[ 23: functions -> . <atan> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s44)
[ 24: functions -> . <sinh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s48)
[ 25: functions -> . <cosh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s52)
[ 26: functions -> . <tanh> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s56)
[ 27: functions -> . <exp> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ] (s60)
[ 28: functions -> . <ln> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s64)
[ 29: functions -> . <sqrt> <(> expr <)>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s68)
[ 30: consts -> . <I>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s77)
[ 31: consts -> . <pi>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s78)
[ 32: consts -> . <e>, { <EOF>,<+>,<->,<*>,</>,<**>, } ] (s79)

i77
[ 30: consts -> <I> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i78
[ 31: consts -> <pi> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

i79
[ 32: consts -> <e> ., { <EOF>,<+>,<->,<*>,</>,<**>,<)>, } ]* (r)

test 1:
| <num> <+> <num> [0 ]
<num> | <+> <num> [0 8 ]
atom | <+> <num> [0 4 ]
atomicExpr | <+> <num> [0 3 ]
powerExpr | <+> <num> [0 21 ]
multiplyExpr | <+> <num> [0 30 ]
expr | <+> <num> [0 2 ]
expr <+> | <num> [0 2 72 ]
expr <+> <num> | [0 2 72 8 ]
expr <+> atom | [0 2 72 4 ]
expr <+> atomicExpr | [0 2 72 3 ]
expr <+> powerExpr | [0 2 72 21 ]
expr <+> multiplyExpr | [0 2 72 26 ]
expr | [0 2 ]
start | [0 1 ]
accepted!

test 2:
| <num> <+> <(> <num> <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 ]
<num> | <+> <(> <num> <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 8 ]
atom | <+> <(> <num> <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 4 ]
atomicExpr | <+> <(> <num> <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 3 ]
powerExpr | <+> <(> <num> <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 21 ]
multiplyExpr | <+> <(> <num> <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 30 ]
expr | <+> <(> <num> <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 2 ]
expr <+> | <(> <num> <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 ]
expr <+> <(> | <num> <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 ]
expr <+> <(> <num> | <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 8 ]
expr <+> <(> atom | <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 4 ]
expr <+> <(> atomicExpr | <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 3 ]
expr <+> <(> powerExpr | <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 21 ]
expr <+> <(> multiplyExpr | <*> <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 30 ]
expr <+> <(> multiplyExpr <*> | <(> <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 ]
expr <+> <(> multiplyExpr <*> <(> | <num> <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 ]
expr <+> <(> multiplyExpr <*> <(> <num> | <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 8 ]
expr <+> <(> multiplyExpr <*> <(> atom | <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 4 ]
expr <+> <(> multiplyExpr <*> <(> atomicExpr | <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 3 ]
expr <+> <(> multiplyExpr <*> <(> powerExpr | <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 21 ]
expr <+> <(> multiplyExpr <*> <(> multiplyExpr | <*> <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 30 ]
expr <+> <(> multiplyExpr <*> <(> multiplyExpr <*> | <num> <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 30 20 ]
expr <+> <(> multiplyExpr <*> <(> multiplyExpr <*> <num> | <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 30 20 8 ]
expr <+> <(> multiplyExpr <*> <(> multiplyExpr <*> atom | <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 30 20 4 ]
expr <+> <(> multiplyExpr <*> <(> multiplyExpr <*> atomicExpr | <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 30 20 3 ]
expr <+> <(> multiplyExpr <*> <(> multiplyExpr <*> powerExpr | <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 30 20 18 ]
expr <+> <(> multiplyExpr <*> <(> multiplyExpr | <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 30 ]
expr <+> <(> multiplyExpr <*> <(> expr | <-> <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 10 ]
expr <+> <(> multiplyExpr <*> <(> expr <-> | <num> <)> <+> <num> <)> [0 2 72 9 30 20 9 10 73 ]
expr <+> <(> multiplyExpr <*> <(> expr <-> <num> | <)> <+> <num> <)> [0 2 72 9 30 20 9 10 73 8 ]
expr <+> <(> multiplyExpr <*> <(> expr <-> atom | <)> <+> <num> <)> [0 2 72 9 30 20 9 10 73 4 ]
expr <+> <(> multiplyExpr <*> <(> expr <-> atomicExpr | <)> <+> <num> <)> [0 2 72 9 30 20 9 10 73 3 ]
expr <+> <(> multiplyExpr <*> <(> expr <-> powerExpr | <)> <+> <num> <)> [0 2 72 9 30 20 9 10 73 21 ]
expr <+> <(> multiplyExpr <*> <(> expr <-> multiplyExpr | <)> <+> <num> <)> [0 2 72 9 30 20 9 10 73 27 ]
expr <+> <(> multiplyExpr <*> <(> expr | <)> <+> <num> <)> [0 2 72 9 30 20 9 10 ]
expr <+> <(> multiplyExpr <*> <(> expr <)> | <+> <num> <)> [0 2 72 9 30 20 9 10 11 ]
expr <+> <(> multiplyExpr <*> atom | <+> <num> <)> [0 2 72 9 30 20 4 ]
expr <+> <(> multiplyExpr <*> atomicExpr | <+> <num> <)> [0 2 72 9 30 20 3 ]
expr <+> <(> multiplyExpr <*> powerExpr | <+> <num> <)> [0 2 72 9 30 20 18 ]
expr <+> <(> multiplyExpr | <+> <num> <)> [0 2 72 9 30 ]
expr <+> <(> expr | <+> <num> <)> [0 2 72 9 10 ]
expr <+> <(> expr <+> | <num> <)> [0 2 72 9 10 72 ]
expr <+> <(> expr <+> <num> | <)> [0 2 72 9 10 72 8 ]
expr <+> <(> expr <+> atom | <)> [0 2 72 9 10 72 4 ]
expr <+> <(> expr <+> atomicExpr | <)> [0 2 72 9 10 72 3 ]
expr <+> <(> expr <+> powerExpr | <)> [0 2 72 9 10 72 21 ]
expr <+> <(> expr <+> multiplyExpr | <)> [0 2 72 9 10 72 26 ]
expr <+> <(> expr | <)> [0 2 72 9 10 ]
expr <+> <(> expr <)> | [0 2 72 9 10 11 ]
expr <+> atom | [0 2 72 4 ]
expr <+> atomicExpr | [0 2 72 3 ]
expr <+> powerExpr | [0 2 72 21 ]
expr <+> multiplyExpr | [0 2 72 26 ]
expr | [0 2 ]
start | [0 1 ]
accepted!

